name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  flake8:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip 
          pip install flake8 flake8-isort
          pip install -r ./requirements.txt
      - name: Test with flake8
        run: |
          python -m flake8 .

  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ github.repository }}:latest

  deploy:
    needs: docker
    runs-on: ubuntu-latest
    steps:
      - name: Start deploying
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            mkdir -p ${{ secrets.FOLDER_NAME }}
            cd ${{ secrets.FOLDER_NAME }}
            cat <<EOF > .env
            ${{ secrets.ENV }}
            EOF

      - name: Checkout code
        uses: actions/checkout@v4
      - name: SCP docker-compose file
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          source: "docker-compose.yml"
          target: "${{ secrets.FOLDER_NAME }}"


      - name: Run docker commands
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            cd ${{ secrets.FOLDER_NAME }}
            sudo docker compose down
            sudo docker system prune -a -f
            sudo docker compose pull
            sudo docker compose up -d
